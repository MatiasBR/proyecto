Terminals unused in grammar

    INTEGER_LITERAL
    IDENTIFIER
    BOOL
    ELSE
    EXTERN
    FALSE
    IF
    INTEGER
    RETURN
    THEN
    TRUE
    VOID
    WHILE
    PLUS
    MINUS
    MULTIPLY
    DIVIDE
    MODULO
    LESS
    GREATER
    EQUAL
    AND
    OR
    NOT
    ASSIGN
    LPAREN
    RPAREN
    SEMICOLON
    COMMA
    ERROR


Grammar

    0 $accept: program $end

    1 program: PROGRAM LBRACE RBRACE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER_LITERAL <int_val> (258)
    IDENTIFIER <string_val> (259)
    PROGRAM (260) 1
    BOOL (261)
    ELSE (262)
    EXTERN (263)
    FALSE (264)
    IF (265)
    INTEGER (266)
    RETURN (267)
    THEN (268)
    TRUE (269)
    VOID (270)
    WHILE (271)
    PLUS (272)
    MINUS (273)
    MULTIPLY (274)
    DIVIDE (275)
    MODULO (276)
    LESS (277)
    GREATER (278)
    EQUAL (279)
    AND (280)
    OR (281)
    NOT (282)
    ASSIGN (283)
    LPAREN (284)
    RPAREN (285)
    LBRACE (286) 1
    RBRACE (287) 1
    SEMICOLON (288)
    COMMA (289)
    ERROR (290)


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program <node> (37)
        on left: 1
        on right: 0


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . LBRACE RBRACE

    LBRACE  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM LBRACE . RBRACE

    RBRACE  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM LBRACE RBRACE .

    $default  reduce using rule 1 (program)
